package com.bridgelabz.utility;

public class Queue 
{
	private int rear;
	private LinkedList<T> queue;
	private int size;
	
	public Queue(int capacity)
	{
		size=capacity;
		queue=new LinkedList<>();
		rear=-1;
	}
	public boolean isEmpty()
	{
		if(rear==-1)
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	public boolean isFull()
	{
		if(rear==size)
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	public int size()
	{
		return rear+1;
	}
	public void enqueue(T item)
	{	
		if(isFull())
		{
			System.out.println("Queue is Full.");
		}
		else
		{
			rear++;
			queue.add(item);
		}
	}
	public T deQueue()
	{
		T item=null;
		if(isEmpty())
		{
			System.out.println("Queue is Empty.");
		}
		else
		{
			item=queue.getFirstItem();
			queue.remove(item);
			rear--;
		}
		return item;
	}
}