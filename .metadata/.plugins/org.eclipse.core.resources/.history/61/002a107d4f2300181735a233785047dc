package com.bridgelabz.utility;

public class Queue<T>
{
	private int front;
	private int rear;
	private LinkedList<T> queue;
	private int size;
	
	public Queue(int capacity)
	{
		size=capacity;
		queue=new LinkedList<>();
		front=0;
		rear=-1;
	}
	public boolean isEmpty()
	{
		if(rear==-1)
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	public boolean isFull()
	{
		if(rear==size)
		{
			return true;
		}
		else
		{
			return false;
		}
	}
	public int size()
	{
		return rear+1;
	}
	public void enqueue(T item)
	{
		
		if(isFull())
		{
			System.out.println("Queue is Full.");
		}
		else
		{
			rear++;
			queue.add(item);
		}
	}
	public Object deQueue()
	{
		Object item=null;
		if(isEmpty())
		{
			item="Queue is Empty";
		}
		else
		{
			item=queue.getFirstItem();
			for(int i=front;i<rear;i--)
			{
				queue[i]=queue[i+1];
			}
			rear--;
		}
		return item;
	}
}